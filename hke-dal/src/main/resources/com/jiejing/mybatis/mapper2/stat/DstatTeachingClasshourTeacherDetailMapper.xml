<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiejing.dao2.stat.DstatTeachingClasshourTeacherDetailMapper" >
  <resultMap id="BaseResultMap" type="com.jiejing.model.DstatTeachingClasshourTeacherDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="inst_id" property="instId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="class_hour" property="classHour" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="BIGINT" />
    <result column="day" property="day" jdbcType="DATE" />
    <result column="sign_id" property="signId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    inst_id, course_id, class_hour, type, day, sign_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jiejing.model.DstatTeachingClasshourTeacherDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dstat_teaching_classhour_teacher_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate" >
      for update
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jiejing.model.DstatTeachingClasshourTeacherDetailExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dstat_teaching_classhour_teacher_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiejing.model.DstatTeachingClasshourTeacherDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_teaching_classhour_teacher_detail (inst_id, course_id, class_hour, 
      type, day, sign_id)
    values (#{instId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{classHour,jdbcType=BIGINT}, 
      #{type,jdbcType=BIGINT}, #{day,jdbcType=DATE}, #{signId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jiejing.model.DstatTeachingClasshourTeacherDetail" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_teaching_classhour_teacher_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="instId != null" >
        inst_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classHour != null" >
        class_hour,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="signId != null" >
        sign_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="instId != null" >
        #{instId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="classHour != null" >
        #{classHour,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIGINT},
      </if>
      <if test="day != null" >
        #{day,jdbcType=DATE},
      </if>
      <if test="signId != null" >
        #{signId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiejing.model.DstatTeachingClasshourTeacherDetailExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dstat_teaching_classhour_teacher_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_teaching_classhour_teacher_detail
    <set >
      <if test="record.instId != null" >
        inst_id = #{record.instId,jdbcType=BIGINT},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.classHour != null" >
        class_hour = #{record.classHour,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIGINT},
      </if>
      <if test="record.day != null" >
        day = #{record.day,jdbcType=DATE},
      </if>
      <if test="record.signId != null" >
        sign_id = #{record.signId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_teaching_classhour_teacher_detail
    set inst_id = #{record.instId,jdbcType=BIGINT},
      course_id = #{record.courseId,jdbcType=BIGINT},
      class_hour = #{record.classHour,jdbcType=BIGINT},
      type = #{record.type,jdbcType=BIGINT},
      day = #{record.day,jdbcType=DATE},
      sign_id = #{record.signId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectListByExampleGroupByCourse" resultType="map">
    SELECT inst_id,course_id,sum(class_hour) class_hour,type
    FROM dstat_teaching_classhour_teacher_detail
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and type in
    <foreach close=")" collection="typeList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day BETWEEN #{beginDate} AND #{endDate}
    GROUP BY inst_id,course_id
    <if test="offset != null">
      limit #{offset},#{limit}
    </if>
  </select>

  <select id="sumClassHourByExample" resultType="Long">
    SELECT sum(class_hour) class_hour
    FROM dstat_teaching_classhour_teacher_detail
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and type in
    <foreach close=")" collection="typeList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day BETWEEN #{beginDate} AND #{endDate}
  </select>
  <select id="countByExampleGroupByCourse" resultType="int">
    SELECT count(1) from(
    SELECT count(1)
    FROM dstat_teaching_classhour_teacher_detail
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and type in
    <foreach close=")" collection="typeList" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day BETWEEN #{beginDate} AND #{endDate}
    GROUP BY inst_id,course_id) t
  </select>
</mapper>