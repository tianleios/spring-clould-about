<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiejing.dao2.stat.DstatFinanEarningMapper">
  <resultMap id="BaseResultMap" type="com.jiejing.model.DstatFinanEarning">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="inst_id" jdbcType="BIGINT" property="instId" />
    <result column="day" jdbcType="DATE" property="day" />
    <result column="one_to_many" jdbcType="INTEGER" property="oneToMany" />
    <result column="one_to_one" jdbcType="INTEGER" property="oneToOne" />
    <result column="course_earning" jdbcType="INTEGER" property="courseEarning" />
    <result column="product_earning" jdbcType="INTEGER" property="productEarning" />
    <result column="total_amount" jdbcType="INTEGER" property="totalAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    inst_id, day, one_to_many, one_to_one, course_earning, product_earning, total_amount
  </sql>
  <select id="selectByExample" parameterType="com.jiejing.model.DstatFinanEarningExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dstat_finan_earning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate">
      for update
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jiejing.model.DstatFinanEarningExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dstat_finan_earning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiejing.model.DstatFinanEarning">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_finan_earning (inst_id, day, one_to_many, 
      one_to_one, course_earning, product_earning, 
      total_amount)
    values (#{instId,jdbcType=BIGINT}, #{day,jdbcType=DATE}, #{oneToMany,jdbcType=INTEGER}, 
      #{oneToOne,jdbcType=INTEGER}, #{courseEarning,jdbcType=INTEGER}, #{productEarning,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jiejing.model.DstatFinanEarning">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_finan_earning
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        inst_id,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="oneToMany != null">
        one_to_many,
      </if>
      <if test="oneToOne != null">
        one_to_one,
      </if>
      <if test="courseEarning != null">
        course_earning,
      </if>
      <if test="productEarning != null">
        product_earning,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        #{instId,jdbcType=BIGINT},
      </if>
      <if test="day != null">
        #{day,jdbcType=DATE},
      </if>
      <if test="oneToMany != null">
        #{oneToMany,jdbcType=INTEGER},
      </if>
      <if test="oneToOne != null">
        #{oneToOne,jdbcType=INTEGER},
      </if>
      <if test="courseEarning != null">
        #{courseEarning,jdbcType=INTEGER},
      </if>
      <if test="productEarning != null">
        #{productEarning,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiejing.model.DstatFinanEarningExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dstat_finan_earning
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_earning
    <set>
      <if test="record.instId != null">
        inst_id = #{record.instId,jdbcType=BIGINT},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=DATE},
      </if>
      <if test="record.oneToMany != null">
        one_to_many = #{record.oneToMany,jdbcType=INTEGER},
      </if>
      <if test="record.oneToOne != null">
        one_to_one = #{record.oneToOne,jdbcType=INTEGER},
      </if>
      <if test="record.courseEarning != null">
        course_earning = #{record.courseEarning,jdbcType=INTEGER},
      </if>
      <if test="record.productEarning != null">
        product_earning = #{record.productEarning,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_earning
    set inst_id = #{record.instId,jdbcType=BIGINT},
      day = #{record.day,jdbcType=DATE},
      one_to_many = #{record.oneToMany,jdbcType=INTEGER},
      one_to_one = #{record.oneToOne,jdbcType=INTEGER},
      course_earning = #{record.courseEarning,jdbcType=INTEGER},
      product_earning = #{record.productEarning,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into dstat_finan_earning  (inst_id, day, one_to_many, 
        one_to_one, course_earning, product_earning, 
        total_amount)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.instId,jdbcType=BIGINT}, #{item.day,jdbcType=DATE}, #{item.oneToMany,jdbcType=INTEGER}, 
        #{item.oneToOne,jdbcType=INTEGER}, #{item.courseEarning,jdbcType=INTEGER}, #{item.productEarning,jdbcType=INTEGER}, 
        #{item.totalAmount,jdbcType=INTEGER})
      </foreach>
    </if>
  </insert>
</mapper>