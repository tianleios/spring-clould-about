<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiejing.dao2.stat.DstatSaleContractDetailMapper">
  <resultMap id="BaseResultMap" type="com.jiejing.model.DstatSaleContractDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="inst_id" jdbcType="BIGINT" property="instId" />
    <result column="day" jdbcType="DATE" property="day" />
    <result column="sale_id" jdbcType="BIGINT" property="saleId" />
    <result column="profit_cont" jdbcType="INTEGER" property="profitCont" />
    <result column="count_cont" jdbcType="INTEGER" property="countCont" />
    <result column="profit_new" jdbcType="INTEGER" property="profitNew" />
    <result column="count_new" jdbcType="INTEGER" property="countNew" />
    <result column="retreat_price" jdbcType="INTEGER" property="retreatPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    inst_id, day, sale_id, profit_cont, count_cont, profit_new, count_new, retreat_price
  </sql>
  <select id="selectByExample" parameterType="com.jiejing.model.DstatSaleContractDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dstat_sale_contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate">
      for update
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jiejing.model.DstatSaleContractDetailExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dstat_sale_contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiejing.model.DstatSaleContractDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_sale_contract_detail (inst_id, day, sale_id, 
      profit_cont, count_cont, profit_new, 
      count_new, retreat_price)
    values (#{instId,jdbcType=BIGINT}, #{day,jdbcType=DATE}, #{saleId,jdbcType=BIGINT}, 
      #{profitCont,jdbcType=INTEGER}, #{countCont,jdbcType=INTEGER}, #{profitNew,jdbcType=INTEGER}, 
      #{countNew,jdbcType=INTEGER}, #{retreatPrice,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jiejing.model.DstatSaleContractDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dstat_sale_contract_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        inst_id,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="saleId != null">
        sale_id,
      </if>
      <if test="profitCont != null">
        profit_cont,
      </if>
      <if test="countCont != null">
        count_cont,
      </if>
      <if test="profitNew != null">
        profit_new,
      </if>
      <if test="countNew != null">
        count_new,
      </if>
      <if test="retreatPrice != null">
        retreat_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        #{instId,jdbcType=BIGINT},
      </if>
      <if test="day != null">
        #{day,jdbcType=DATE},
      </if>
      <if test="saleId != null">
        #{saleId,jdbcType=BIGINT},
      </if>
      <if test="profitCont != null">
        #{profitCont,jdbcType=INTEGER},
      </if>
      <if test="countCont != null">
        #{countCont,jdbcType=INTEGER},
      </if>
      <if test="profitNew != null">
        #{profitNew,jdbcType=INTEGER},
      </if>
      <if test="countNew != null">
        #{countNew,jdbcType=INTEGER},
      </if>
      <if test="retreatPrice != null">
        #{retreatPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiejing.model.DstatSaleContractDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dstat_sale_contract_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_sale_contract_detail
    <set>
      <if test="record.instId != null">
        inst_id = #{record.instId,jdbcType=BIGINT},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=DATE},
      </if>
      <if test="record.saleId != null">
        sale_id = #{record.saleId,jdbcType=BIGINT},
      </if>
      <if test="record.profitCont != null">
        profit_cont = #{record.profitCont,jdbcType=INTEGER},
      </if>
      <if test="record.countCont != null">
        count_cont = #{record.countCont,jdbcType=INTEGER},
      </if>
      <if test="record.profitNew != null">
        profit_new = #{record.profitNew,jdbcType=INTEGER},
      </if>
      <if test="record.countNew != null">
        count_new = #{record.countNew,jdbcType=INTEGER},
      </if>
      <if test="record.retreatPrice != null">
        retreat_price = #{record.retreatPrice,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_sale_contract_detail
    set inst_id = #{record.instId,jdbcType=BIGINT},
      day = #{record.day,jdbcType=DATE},
      sale_id = #{record.saleId,jdbcType=BIGINT},
      profit_cont = #{record.profitCont,jdbcType=INTEGER},
      count_cont = #{record.countCont,jdbcType=INTEGER},
      profit_new = #{record.profitNew,jdbcType=INTEGER},
      count_new = #{record.countNew,jdbcType=INTEGER},
      retreat_price = #{record.retreatPrice,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <select id="selectGroupByRefId" resultType="com.jiejing.vo.ContractDetailGroupVO">
      select * from (
      select inst_id,ref_id,type,sum(cost) value from stat.dstat_sale_contract_detail
      where inst_id in
      <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
      and day between #{beginDate} and #{endDate}
      group by ref_id
      order by sum(cost) desc
      ) t
      <if test="offset != null">
        limit #{offset},#{limit}
      </if>
    </select>
  <select id="selectNumGroupByRefId" resultType="com.jiejing.vo.ContractDetailGroupVO">
    select * from (
    select inst_id,ref_id,type,sum(num) value from stat.dstat_sale_contract_detail
    where inst_id IN
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
     and day between #{beginDate} and #{endDate}
    group by ref_id
    order by sum(num) desc
    ) t
    <if test="offset != null">
    limit #{offset},#{limit}
    </if>
  </select>
  <select id="countGroupByRefId" resultType="java.lang.Integer">
    select count(1) from (
      select 1 from
      stat.dstat_sale_contract_detail
      where
      inst_id IN
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
      and day between #{beginDate} and #{endDate}
    group by ref_id) t
  </select>
    <select id="sumCostGroupByRefId" resultType="java.lang.Integer">
      select sum(cost) value from stat.dstat_sale_contract_detail
      where inst_id in
      <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
        #{item}
      </foreach>
      and day between #{beginDate} and #{endDate}
    </select>
  <select id="sumNumGroupByRefId" resultType="java.lang.Integer">
    select sum(num) value from stat.dstat_sale_contract_detail
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day between #{beginDate} and #{endDate}
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into dstat_sale_contract_detail  (inst_id, ref_id, type, 
        day, num, cost)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.instId,jdbcType=BIGINT}, #{item.refId,jdbcType=BIGINT}, #{item.type,jdbcType=INTEGER}, 
        #{item.day,jdbcType=DATE}, #{item.num,jdbcType=INTEGER}, #{item.cost,jdbcType=INTEGER})
      </foreach>
    </if>
  </insert>
  <select id="groupBySalePageable" resultMap="BaseResultMap">
    select inst_id,sale_id, ifnull(sum(count_cont), 0) count_cont,ifnull(sum(profit_new), 0) profit_new,
    ifnull(sum(count_new), 0) count_new,ifnull(sum(profit_cont), 0) profit_cont,ifnull(sum(retreat_price), 0) retreat_price
    from dstat_sale_contract_detail
    where inst_id IN
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day between #{beginDate} and #{endDate}
    group by inst_id,sale_id
    <!--order by profit_new+profit_cont desc-->
    <if test="offset != null">
    limit #{offset},#{limit}
    </if>
  </select>
  <select id="selectAmount" resultType="java.lang.Integer">
    select ifnull(sum(profit_new), 0) + ifnull(sum(profit_cont), 0) as totalAmount
    from dstat_sale_contract_detail
    where inst_id IN
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day between #{beginDate} and #{endDate}
  </select>
  <select id="selectCount" resultType="java.lang.Integer">
    select ifnull(sum(count_new), 0) + ifnull(sum(count_cont), 0) as totalCount
    from dstat_sale_contract_detail
    where inst_id IN
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day between #{beginDate} and #{endDate}
  </select>
  <select id="countBySale" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(1) from (
    SELECT DISTINCT sale_id FROM dstat_sale_contract_detail
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and day between #{beginDate} and #{endDate}
    ) t

  </select>


</mapper>