<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiejing.dao2.stat.MstatFinanEarningActualMapper">
  <resultMap id="BaseResultMap" type="com.jiejing.model.MstatFinanEarningActual">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="inst_id" jdbcType="BIGINT" property="instId" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="inst_name" jdbcType="VARCHAR" property="instName" />
    <result column="month_start" jdbcType="TIMESTAMP" property="monthStart" />
    <result column="month_end" jdbcType="TIMESTAMP" property="monthEnd" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="loss" jdbcType="INTEGER" property="loss" />
    <result column="past_receipt" jdbcType="INTEGER" property="pastReceipt" />
    <result column="refund_cost" jdbcType="INTEGER" property="refundCost" />
    <result column="current_receipt" jdbcType="INTEGER" property="currentReceipt" />
    <result column="actual_cost" jdbcType="INTEGER" property="actualCost" />
    <result column="trans_cost" jdbcType="INTEGER" property="transCost" />
    <result column="service_charge" jdbcType="INTEGER" property="serviceCharge" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    inst_id, month, inst_name, month_start, month_end, pay_type, loss, past_receipt, 
    refund_cost, current_receipt, actual_cost, trans_cost, service_charge
  </sql>
  <select id="selectByExample" parameterType="com.jiejing.model.MstatFinanEarningActualExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mstat_finan_earning_actual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate">
      for update
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jiejing.model.MstatFinanEarningActualExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mstat_finan_earning_actual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiejing.model.MstatFinanEarningActual">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mstat_finan_earning_actual (inst_id, month, inst_name, 
      month_start, month_end, pay_type, 
      loss, past_receipt, refund_cost, 
      current_receipt, actual_cost, trans_cost, 
      service_charge)
    values (#{instId,jdbcType=BIGINT}, #{month,jdbcType=INTEGER}, #{instName,jdbcType=VARCHAR}, 
      #{monthStart,jdbcType=TIMESTAMP}, #{monthEnd,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, 
      #{loss,jdbcType=INTEGER}, #{pastReceipt,jdbcType=INTEGER}, #{refundCost,jdbcType=INTEGER}, 
      #{currentReceipt,jdbcType=INTEGER}, #{actualCost,jdbcType=INTEGER}, #{transCost,jdbcType=INTEGER}, 
      #{serviceCharge,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jiejing.model.MstatFinanEarningActual">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into mstat_finan_earning_actual
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        inst_id,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="instName != null">
        inst_name,
      </if>
      <if test="monthStart != null">
        month_start,
      </if>
      <if test="monthEnd != null">
        month_end,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="loss != null">
        loss,
      </if>
      <if test="pastReceipt != null">
        past_receipt,
      </if>
      <if test="refundCost != null">
        refund_cost,
      </if>
      <if test="currentReceipt != null">
        current_receipt,
      </if>
      <if test="actualCost != null">
        actual_cost,
      </if>
      <if test="transCost != null">
        trans_cost,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instId != null">
        #{instId,jdbcType=BIGINT},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="instName != null">
        #{instName,jdbcType=VARCHAR},
      </if>
      <if test="monthStart != null">
        #{monthStart,jdbcType=TIMESTAMP},
      </if>
      <if test="monthEnd != null">
        #{monthEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="loss != null">
        #{loss,jdbcType=INTEGER},
      </if>
      <if test="pastReceipt != null">
        #{pastReceipt,jdbcType=INTEGER},
      </if>
      <if test="refundCost != null">
        #{refundCost,jdbcType=INTEGER},
      </if>
      <if test="currentReceipt != null">
        #{currentReceipt,jdbcType=INTEGER},
      </if>
      <if test="actualCost != null">
        #{actualCost,jdbcType=INTEGER},
      </if>
      <if test="transCost != null">
        #{transCost,jdbcType=INTEGER},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiejing.model.MstatFinanEarningActualExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from mstat_finan_earning_actual
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mstat_finan_earning_actual
    <set>
      <if test="record.instId != null">
        inst_id = #{record.instId,jdbcType=BIGINT},
      </if>
      <if test="record.month != null">
        month = #{record.month,jdbcType=INTEGER},
      </if>
      <if test="record.instName != null">
        inst_name = #{record.instName,jdbcType=VARCHAR},
      </if>
      <if test="record.monthStart != null">
        month_start = #{record.monthStart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.monthEnd != null">
        month_end = #{record.monthEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.loss != null">
        loss = #{record.loss,jdbcType=INTEGER},
      </if>
      <if test="record.pastReceipt != null">
        past_receipt = #{record.pastReceipt,jdbcType=INTEGER},
      </if>
      <if test="record.refundCost != null">
        refund_cost = #{record.refundCost,jdbcType=INTEGER},
      </if>
      <if test="record.currentReceipt != null">
        current_receipt = #{record.currentReceipt,jdbcType=INTEGER},
      </if>
      <if test="record.actualCost != null">
        actual_cost = #{record.actualCost,jdbcType=INTEGER},
      </if>
      <if test="record.transCost != null">
        trans_cost = #{record.transCost,jdbcType=INTEGER},
      </if>
      <if test="record.serviceCharge != null">
        service_charge = #{record.serviceCharge,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mstat_finan_earning_actual
    set inst_id = #{record.instId,jdbcType=BIGINT},
      month = #{record.month,jdbcType=INTEGER},
      inst_name = #{record.instName,jdbcType=VARCHAR},
      month_start = #{record.monthStart,jdbcType=TIMESTAMP},
      month_end = #{record.monthEnd,jdbcType=TIMESTAMP},
      pay_type = #{record.payType,jdbcType=INTEGER},
      loss = #{record.loss,jdbcType=INTEGER},
      past_receipt = #{record.pastReceipt,jdbcType=INTEGER},
      refund_cost = #{record.refundCost,jdbcType=INTEGER},
      current_receipt = #{record.currentReceipt,jdbcType=INTEGER},
      actual_cost = #{record.actualCost,jdbcType=INTEGER},
      trans_cost = #{record.transCost,jdbcType=INTEGER},
      service_charge = #{record.serviceCharge,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectGroupByType" resultType="map">
    SELECT inst_id,month_start,month_end,inst_name,
    sum(if(pay_type = 1, actual_cost, 0)) cash,
    sum(if(pay_type = 2, actual_cost, 0)) card,
    sum(if(pay_type = 3, actual_cost, 0)) aliPay,
    sum(if(pay_type = 4, actual_cost, 0)) weChat,
    sum(if(pay_type = 5, actual_cost, 0)) pos,
    sum(actual_cost) actual_cost
    from mstat_finan_earning_actual
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and month_start &gt;= #{monthStart}
    GROUP BY inst_id,month_start
    order by month_start desc;
  </select>

  <select id="selectGroupBySource" resultType="map">
    SELECT inst_id,month_start,month_end,inst_name,
    sum(refund_cost) refund_cost,
    sum(trans_cost) trans_cost,
    sum(past_receipt) past_receipt,
    sum(current_receipt) current_receipt,
    sum(service_charge) service_charge,
    sum(actual_cost) actual_cost,
    sum(loss) loss
    from mstat_finan_earning_actual
    where inst_id in
    <foreach close=")" collection="instIds" index="index" item="item" open="(" separator=",">
      #{item}
    </foreach>
    and month_start &gt;= #{monthStart}
    GROUP BY inst_id,month_start
    order by month_start desc;
  </select>
</mapper>