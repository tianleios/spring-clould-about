<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiejing.dao2.stat.DstatFinanExpenseMapper">
  <resultMap id="BaseResultMap" type="com.jiejing.model.DstatFinanExpense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="inst_id" jdbcType="BIGINT" property="instId" />
    <result column="day" jdbcType="DATE" property="day" />
    <result column="purchase_expense" jdbcType="BIGINT" property="purchaseExpense" />
    <result column="total_amount" jdbcType="BIGINT" property="totalAmount" />
    <result column="other_expense" jdbcType="BIGINT" property="otherExpense" />
    <result column="util_expense" jdbcType="BIGINT" property="utilExpense" />
    <result column="rent_expense" jdbcType="BIGINT" property="rentExpense" />
    <result column="salary_expense" jdbcType="BIGINT" property="salaryExpense" />
    <result column="product_expense" jdbcType="BIGINT" property="productExpense" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, inst_id, day, purchase_expense, total_amount, other_expense, util_expense, rent_expense, 
    salary_expense, product_expense
  </sql>
  <select id="selectByExample" parameterType="com.jiejing.model.DstatFinanExpenseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dstat_finan_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from dstat_finan_expense
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dstat_finan_expense
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiejing.model.DstatFinanExpenseExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dstat_finan_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiejing.model.DstatFinanExpense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dstat_finan_expense (id, inst_id, day, 
      purchase_expense, total_amount, other_expense, 
      util_expense, rent_expense, salary_expense, 
      product_expense)
    values (#{id,jdbcType=VARCHAR}, #{instId,jdbcType=BIGINT}, #{day,jdbcType=DATE}, 
      #{purchaseExpense,jdbcType=BIGINT}, #{totalAmount,jdbcType=BIGINT}, #{otherExpense,jdbcType=BIGINT}, 
      #{utilExpense,jdbcType=BIGINT}, #{rentExpense,jdbcType=BIGINT}, #{salaryExpense,jdbcType=BIGINT}, 
      #{productExpense,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jiejing.model.DstatFinanExpense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dstat_finan_expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="instId != null">
        inst_id,
      </if>
      <if test="day != null">
        day,
      </if>
      <if test="purchaseExpense != null">
        purchase_expense,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="otherExpense != null">
        other_expense,
      </if>
      <if test="utilExpense != null">
        util_expense,
      </if>
      <if test="rentExpense != null">
        rent_expense,
      </if>
      <if test="salaryExpense != null">
        salary_expense,
      </if>
      <if test="productExpense != null">
        product_expense,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="instId != null">
        #{instId,jdbcType=BIGINT},
      </if>
      <if test="day != null">
        #{day,jdbcType=DATE},
      </if>
      <if test="purchaseExpense != null">
        #{purchaseExpense,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=BIGINT},
      </if>
      <if test="otherExpense != null">
        #{otherExpense,jdbcType=BIGINT},
      </if>
      <if test="utilExpense != null">
        #{utilExpense,jdbcType=BIGINT},
      </if>
      <if test="rentExpense != null">
        #{rentExpense,jdbcType=BIGINT},
      </if>
      <if test="salaryExpense != null">
        #{salaryExpense,jdbcType=BIGINT},
      </if>
      <if test="productExpense != null">
        #{productExpense,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiejing.model.DstatFinanExpenseExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from dstat_finan_expense
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_expense
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.instId != null">
        inst_id = #{record.instId,jdbcType=BIGINT},
      </if>
      <if test="record.day != null">
        day = #{record.day,jdbcType=DATE},
      </if>
      <if test="record.purchaseExpense != null">
        purchase_expense = #{record.purchaseExpense,jdbcType=BIGINT},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=BIGINT},
      </if>
      <if test="record.otherExpense != null">
        other_expense = #{record.otherExpense,jdbcType=BIGINT},
      </if>
      <if test="record.utilExpense != null">
        util_expense = #{record.utilExpense,jdbcType=BIGINT},
      </if>
      <if test="record.rentExpense != null">
        rent_expense = #{record.rentExpense,jdbcType=BIGINT},
      </if>
      <if test="record.salaryExpense != null">
        salary_expense = #{record.salaryExpense,jdbcType=BIGINT},
      </if>
      <if test="record.productExpense != null">
        product_expense = #{record.productExpense,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_expense
    set id = #{record.id,jdbcType=VARCHAR},
      inst_id = #{record.instId,jdbcType=BIGINT},
      day = #{record.day,jdbcType=DATE},
      purchase_expense = #{record.purchaseExpense,jdbcType=BIGINT},
      total_amount = #{record.totalAmount,jdbcType=BIGINT},
      other_expense = #{record.otherExpense,jdbcType=BIGINT},
      util_expense = #{record.utilExpense,jdbcType=BIGINT},
      rent_expense = #{record.rentExpense,jdbcType=BIGINT},
      salary_expense = #{record.salaryExpense,jdbcType=BIGINT},
      product_expense = #{record.productExpense,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiejing.model.DstatFinanExpense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_expense
    <set>
      <if test="instId != null">
        inst_id = #{instId,jdbcType=BIGINT},
      </if>
      <if test="day != null">
        day = #{day,jdbcType=DATE},
      </if>
      <if test="purchaseExpense != null">
        purchase_expense = #{purchaseExpense,jdbcType=BIGINT},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=BIGINT},
      </if>
      <if test="otherExpense != null">
        other_expense = #{otherExpense,jdbcType=BIGINT},
      </if>
      <if test="utilExpense != null">
        util_expense = #{utilExpense,jdbcType=BIGINT},
      </if>
      <if test="rentExpense != null">
        rent_expense = #{rentExpense,jdbcType=BIGINT},
      </if>
      <if test="salaryExpense != null">
        salary_expense = #{salaryExpense,jdbcType=BIGINT},
      </if>
      <if test="productExpense != null">
        product_expense = #{productExpense,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiejing.model.DstatFinanExpense">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dstat_finan_expense
    set inst_id = #{instId,jdbcType=BIGINT},
      day = #{day,jdbcType=DATE},
      purchase_expense = #{purchaseExpense,jdbcType=BIGINT},
      total_amount = #{totalAmount,jdbcType=BIGINT},
      other_expense = #{otherExpense,jdbcType=BIGINT},
      util_expense = #{utilExpense,jdbcType=BIGINT},
      rent_expense = #{rentExpense,jdbcType=BIGINT},
      salary_expense = #{salaryExpense,jdbcType=BIGINT},
      product_expense = #{productExpense,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into dstat_finan_expense  (id, inst_id, day, 
        purchase_expense, total_amount, other_expense, 
        util_expense, rent_expense, salary_expense, 
        product_expense)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.instId,jdbcType=BIGINT}, #{item.day,jdbcType=DATE}, 
        #{item.purchaseExpense,jdbcType=BIGINT}, #{item.totalAmount,jdbcType=BIGINT}, #{item.otherExpense,jdbcType=BIGINT}, 
        #{item.utilExpense,jdbcType=BIGINT}, #{item.rentExpense,jdbcType=BIGINT}, #{item.salaryExpense,jdbcType=BIGINT}, 
        #{item.productExpense,jdbcType=BIGINT})
      </foreach>
    </if>
  </insert>
</mapper>